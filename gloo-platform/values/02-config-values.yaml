common:
  cluster: cluster1 
glooAgent:
  enabled: true
  relay:
    serverAddress: gloo-mesh-mgmt-server.gloo-mesh:9900
    clientTlsSecret:
      name: gloo-mesh-agent-cluster1-tls-cert 
    tokenSecret:
      key: null
      name: null
      namespace: null
glooMgmtServer:
  serviceType: LoadBalancer
  registerCluster: false 
  enabled: true
  relay:
    disableCa: true
    disableCaCertGeneration: true
    disableTokenGeneration: false
    tlsSecret:
      name: custom-relay-server-tls-aws
glooUi:
  enabled: true
  serviceType: LoadBalancer
istioInstallations:
  enabled: false
telemetryCollector:
  enabled: true
  config:
    exporters:
      otlp:
        endpoint: gloo-telemetry-gateway.kyle.consultsolo.net:4317
        tls:
          ca_file: /etc/otel-certs/ca.crt
          server_name_override: gloo-telemetry-gateway.kyle.consultsolo.net
  # resources:
  #   limits:
  #     cpu: 2
  #     memory: 2Gi
  #   requests:
  #     cpu: 500m
  #     memory: 1Gi
  extraVolumes:
    - name: root-ca
      secret:
        defaultMode: 420
        secretName: custom-relay-server-tls-aws
    - configMap:
        items:
          - key: relay
            path: relay.yaml
        name: gloo-telemetry-collector-config
      name: telemetry-configmap
telemetryCollectorCustomization:
  serverName: gloo-telemetry-gateway.kyle.consultsolo.net
legacyMetricsPipeline:
  enabled: false
telemetryGateway:
  enabled: true 
  service:
    type: LoadBalancer
  resources:
    limits:
      cpu: 600m
      memory: 2Gi
    requests:
      cpu: 300m
      memory: 1Gi
prometheus:
  enabled: true
redis:
  deployment:
    enabled: true
telemetryGatewayCustomization:
  serverName: gloo-telemetry-gateway.kyle.consultsolo.net
  disableCertGeneration: true
  extraReceivers:
    prometheus/gloo-mgmt:
      config:
        scrape_configs:
        - job_name: gloo-mesh-mgmt-server-otel
          honor_labels: true
          kubernetes_sd_configs:
          - namespaces:
              names:
              - gloo-mesh
            role: pod
          relabel_configs:
          - action: keep
            regex: gloo-mesh-mgmt-server|gloo-mesh-ui
            source_labels:
            - __meta_kubernetes_pod_label_app
          - action: keep
            regex: true
            source_labels:
            - __meta_kubernetes_pod_annotation_prometheus_io_scrape
          - action: drop
            regex: true
            source_labels:
            - __meta_kubernetes_pod_annotation_prometheus_io_scrape_slow
          - action: replace
            regex: (https?)
            source_labels:
            - __meta_kubernetes_pod_annotation_prometheus_io_scheme
            target_label: __scheme__
          - action: replace
            regex: (.+)
            source_labels:
            - __meta_kubernetes_pod_annotation_prometheus_io_path
            target_label: __metrics_path__
          - action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $$1:$$2
            source_labels:
            - __address__
            - __meta_kubernetes_pod_annotation_prometheus_io_port
            target_label: __address__
          - action: labelmap
            regex: __meta_kubernetes_pod_annotation_prometheus_io_param_(.+)
            replacement: __param_$$1
          - action: labelmap
            regex: __meta_kubernetes_pod_label_(.+)
          - action: replace
            source_labels:
            - __meta_kubernetes_namespace
            target_label: namespace
          - action: replace
            source_labels:
            - __meta_kubernetes_pod_name
            target_label: pod
          - action: drop
            regex: Pending|Succeeded|Failed|Completed
            source_labels:
            - __meta_kubernetes_pod_phase
  extraPipelines:
    metrics/gloo-mgmt:
      receivers:
      - prometheus/gloo-mgmt # Prometheus scrape config for mgmt-server
      processors:
      - memory_limiter
      - batch
      exporters:
      - prometheus # Prometheus deployed by Gloo.